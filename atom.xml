<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JimmyLuo&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-01T09:00:10.909Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jimmy Luo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2021 Javascript测试概述</title>
    <link href="http://example.com/archives/896f.html"/>
    <id>http://example.com/archives/896f.html</id>
    <published>2021-06-01T02:57:52.000Z</published>
    <updated>2021-06-01T09:00:10.909Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文：<a href="https://medium.com/welldone-software/an-overview-of-javascript-testing-7ce7298b9870">An Overview of JavaScript Testing in 2021</a>，本文是对原文消化后的部分整理，如果以前未接触过前端测试，请读者看原文</p></blockquote><h2 id="测试类型"><a href="#测试类型" class="headerlink" title="测试类型"></a>测试类型</h2><ul><li>单元测试</li><li>集成测试</li><li>功能测试</li></ul><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><ul><li>浏览器</li><li>无界面浏览器</li><li>Nodejs<span id="more"></span><h2 id="测试工具类型"><a href="#测试工具类型" class="headerlink" title="测试工具类型"></a>测试工具类型</h2></li></ul><h3 id="框架对比表"><a href="#框架对比表" class="headerlink" title="框架对比表"></a>框架对比表</h3><table border=0 cellpadding=0 cellspacing=0 width=1947 style='border-collapse: collapse;table-layout:fixed;width:1461pt'> <col class=xl65 width=156 style='mso-width-source:userset;mso-width-alt:4992; width:117pt'> <col class=xl66 width=149 style='mso-width-source:userset;mso-width-alt:4778; width:112pt'> <col class=xl66 width=279 style='mso-width-source:userset;mso-width-alt:8917; width:209pt'> <col class=xl66 width=199 style='mso-width-source:userset;mso-width-alt:6357; width:149pt'> <col class=xl66 width=277 style='mso-width-source:userset;mso-width-alt:8874; width:208pt'> <col class=xl66 width=153 style='mso-width-source:userset;mso-width-alt:4906; width:115pt'> <col class=xl66 width=229 style='mso-width-source:userset;mso-width-alt:7338; width:172pt'> <col class=xl66 width=180 style='mso-width-source:userset;mso-width-alt:5760; width:135pt'> <col class=xl66 width=120 style='mso-width-source:userset;mso-width-alt:3840; width:90pt'> <col class=xl66 width=205 style='mso-width-source:userset;mso-width-alt:6570; width:154pt'> <tr class=xl67 height=79 style='mso-height-source:userset;height:59.0pt'>  <td height=79 class=xl68 width=156 style='height:59.0pt;width:117pt'><font  class="font6"><sub>框架</sub></font><font class="font11"><span  style='mso-spacerun:yes'>                 </span></font><font class="font7"><sup>功能</sup></font></td>  <td class=xl69 width=149 style='border-left:none;width:112pt'>Test lanuchers</td>  <td class=xl69 width=279 style='border-left:none;width:209pt'>Testing  structure providers</td>  <td class=xl69 width=199 style='border-left:none;width:149pt'>Assertion  functions</td>  <td class=xl69 width=277 style='border-left:none;width:208pt'>Generate and  display test progress and summary</td>  <td class=xl69 width=153 style='border-left:none;width:115pt'>  <meta charset=utf-8>  Mocks, spies, and stubs</td>  <td class=xl69 width=229 style='border-left:none;width:172pt'>Generate and  compare snapshots</td>  <td class=xl69 width=180 style='border-left:none;width:135pt'>Generate code  coverage</td>  <td class=xl69 width=120 style='border-left:none;width:90pt'>Browser  Controllers</td>  <td class=xl69 width=205 style='border-left:none;width:154pt'>Visual  Regression Tools</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Karma</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Jasmine</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Jest</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>TestCafe</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Cypress</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>webdriverio</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Mocha</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Cucumber</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Chai</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Unexpected</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Sinon</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>enzyme</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>testdouble</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Ava</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Instanbul</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Blanket</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Nightwatch</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Nightmare</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Phantom</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Pupperteer</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td>  <td class=xl71 style='border-top:none;border-left:none'>　</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Applitools</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Percy</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>Wraith</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td> </tr> <tr height=28 style='height:21.0pt'>  <td height=28 class=xl70 style='height:21.0pt;border-top:none'>WebdriverCSS</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>　</td>  <td class=xl72 style='border-top:none;border-left:none'>✔️</td> </tr> <![if supportMisalignedColumns]> <tr height=0 style='display:none'>  <td width=156 style='width:117pt'></td>  <td width=149 style='width:112pt'></td>  <td width=279 style='width:209pt'></td>  <td width=199 style='width:149pt'></td>  <td width=277 style='width:208pt'></td>  <td width=153 style='width:115pt'></td>  <td width=229 style='width:172pt'></td>  <td width=180 style='width:135pt'></td>  <td width=120 style='width:90pt'></td>  <td width=205 style='width:154pt'></td> </tr></table><h3 id="Browser-Controllers"><a href="#Browser-Controllers" class="headerlink" title="Browser Controllers"></a>Browser Controllers</h3><blockquote><p>模拟用户行为，比如：点击鼠标、拖拽、上滑、码字和导航等</p></blockquote><ul><li><p>借助安装驱动，比如selenium, protractor, webdriverIO, Nightwatch, Apium</p><p><code>Your code on Node.js &lt;&gt; WebDriver &lt;&gt; FF/Chrome/Safari Driver &lt;&gt; Browser</code></p></li><li><p>注入脚本，比如testCafe, Cypress</p><p><code>document.getElementByID(&#39;someButton&#39;).dispatchEvent(clickEvent)</code></p></li><li><p>暴露浏览器的原生API，比如puppeteer</p><p><code>Your code on Node.js &lt;&gt; Browser&#39;s API</code></p></li></ul><h2 id="组合使用测试框架"><a href="#组合使用测试框架" class="headerlink" title="组合使用测试框架"></a>组合使用测试框架</h2><p>像Jest, Jasmine, TestCafe, Cypress是集成型的可以开箱即用。而有些需要组合使用比如一种常见的组合：mocha + chai + sinon</p><p>建议从两个方面考虑：1、单元测试和集成测试；2、端对端测试（功能测试）。因为功能测试特别耗时间，特别是测试不同浏览器时</p><blockquote><p>集成型的简单，开箱即用，功能也强大。而非集成型的比较灵活，可以任意组合</p></blockquote><p>各种测试类型需要的测试框架能力：</p><ul><li><strong>单元测试：</strong>assertion functions和code coverage reporting tool</li></ul><blockquote><p>单元测试一般用于函数式编程和尽可能保持纯洁（无副用作），越纯洁测试就越容易</p></blockquote><ul><li><strong>集成测试：</strong>Mocks, spies, and stubs和component snapshot</li></ul><blockquote><p>集成测试应该涵盖重要的跨模块过程。有时它们扩展到跨多个类的流程，有时扩展到测试不同的系统，如前端-后端交互</p></blockquote><ul><li><strong>功能测试：</strong> control browsers和Visual regression tools</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://medium.com/welldone-software/an-overview-of-javascript-testing-7ce7298b9870&quot;&gt;An Overview of JavaScript Testing in 2021&lt;/a&gt;，本文是对原文消化后的部分整理，如果以前未接触过前端测试，请读者看原文&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;测试类型&quot;&gt;&lt;a href=&quot;#测试类型&quot; class=&quot;headerlink&quot; title=&quot;测试类型&quot;&gt;&lt;/a&gt;测试类型&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;单元测试&lt;/li&gt;
&lt;li&gt;集成测试&lt;/li&gt;
&lt;li&gt;功能测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;测试环境&quot;&gt;&lt;a href=&quot;#测试环境&quot; class=&quot;headerlink&quot; title=&quot;测试环境&quot;&gt;&lt;/a&gt;测试环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;浏览器&lt;/li&gt;
&lt;li&gt;无界面浏览器&lt;/li&gt;
&lt;li&gt;Nodejs</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="测试" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="Jest" scheme="http://example.com/tags/Jest/"/>
    
    <category term="jasmine" scheme="http://example.com/tags/jasmine/"/>
    
    <category term="AVA" scheme="http://example.com/tags/AVA/"/>
    
    <category term="Istanbul" scheme="http://example.com/tags/Istanbul/"/>
    
    <category term="Karma" scheme="http://example.com/tags/Karma/"/>
    
    <category term="Chai" scheme="http://example.com/tags/Chai/"/>
    
    <category term="selenium" scheme="http://example.com/tags/selenium/"/>
    
    <category term="Cypress" scheme="http://example.com/tags/Cypress/"/>
    
  </entry>
  
  <entry>
    <title>Vue小抄</title>
    <link href="http://example.com/archives/71de.html"/>
    <id>http://example.com/archives/71de.html</id>
    <published>2019-11-06T16:00:00.000Z</published>
    <updated>2021-04-15T13:06:06.670Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>声明式渲染</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-5&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;Hello Vue.js!&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reverseMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.message = <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><span id="more"></span></li><li><p><strong>指令</strong></p><ul><li><p>单向数据绑定：<code>v-bind:title</code>或<code>&#123;&#123;&#125;&#125;</code>，(title为元素特性)，<code>v-bind</code>的缩写：<code>:</code></p></li><li><p>条件：<code>v-if</code>、<code>v-else</code>、<code>v-else-if</code></p></li><li><p>循环：<code>v-for</code></p></li><li><p>事件：<code>v-on:click</code> 缩写：<code>@</code></p></li><li><p>双向数据绑定：<code>v-model</code></p></li><li><p>插槽：<code>v-slot</code> 缩写：<code>#</code></p></li><li><p><code>v-html</code></p><p><a href="https://cn.vuejs.org/v2/api/#%E6%8C%87%E4%BB%A4">更多指令</a></p></li></ul></li><li><p><strong>组件，模板语言</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;todo-item&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">// todo-item 组件现在接受一个</span></span><br><span class="line">  <span class="comment">// &quot;prop&quot;，类似于一个自定义特性。</span></span><br><span class="line">  <span class="comment">// 这个 prop 名为 todo。</span></span><br><span class="line">  props: [<span class="string">&#x27;todo&#x27;</span>],</span><br><span class="line">  template: <span class="string">&#x27;&lt;li&gt;&#123;&#123; todo.text &#125;&#125;&lt;/li&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">&quot;app-7&quot;</span>&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">      现在我们为每个 todo-item 提供 todo 对象</span><br><span class="line">      todo 对象是变量，即其内容可以是动态的。</span><br><span class="line">      我们也需要为每个组件提供一个“key”，稍后再</span><br><span class="line">      作详细解释。</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;todo-item</span><br><span class="line">      v-<span class="keyword">for</span>=<span class="string">&quot;item in groceryList&quot;</span></span><br><span class="line">      v-bind:todo=<span class="string">&quot;item&quot;</span></span><br><span class="line">      v-bind:key=<span class="string">&quot;item.id&quot;</span></span><br><span class="line">    &gt;&lt;/todo-item&gt;</span><br><span class="line">  &lt;/ol&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app7 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app-7&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    groceryList: [</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">0</span>, <span class="attr">text</span>: <span class="string">&#x27;蔬菜&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">&#x27;奶酪&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">&#x27;随便其它什么人吃的东西&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>Vue实例属性与方法</strong></p><ol><li><p>属性</p><ul><li><p>$data</p></li><li><p>$el</p><p><a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7">更多属性</a></p></li></ul></li><li><p>方法</p><ul><li><p>$watch</p><p><a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95-%E6%95%B0%E6%8D%AE">更多方法</a></p></li></ul></li></ol></li><li><p><strong>生命周期</strong></p><p><img src="http://cn.vuejs.org/images/lifecycle.png" alt="vue生命周期"></p></li><li><p><strong>事件修饰符</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 触发event.preventDefault()</span></span><br><span class="line">&lt;form v-on:submit.prevent=<span class="string">&quot;onSubmit&quot;</span>&gt;...&lt;/form&gt;</span><br></pre></td></tr></table></figure><p><code>.stop</code> <code>.prevent</code> <code>.capture</code> <code>.self</code> <code>.once</code> <code>.passive</code></p></li><li><p><strong>计算属性与监听器</strong></p><ul><li><p>计算属性：是基于它们的响应式依赖进行缓存的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#example&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">&#x27;Hello&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="comment">// 计算属性的 getter</span></span><br><span class="line">    reversedMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// `this` 指向 vm 实例</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>监听器，当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的</p></li></ul></li><li><p><strong>按键修饰符</strong></p><p>直接将 <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values"><code>KeyboardEvent.key</code></a> 暴露的任意有效按键名转换为 kebab-case 来作为修饰符。</p><p>vue为了兼容，定义了常见的按键码别名：</p><ul><li><code>.enter</code></li><li><code>.tab</code></li><li><code>.delete</code> (捕获“删除”和“退格”键)</li><li><code>.esc</code></li><li><code>.space</code></li><li><code>.up</code></li><li><code>.down</code></li><li><code>.left</code></li><li><code>.right</code></li></ul></li><li><p><strong>系统修饰键</strong></p><ul><li><code>.ctrl</code></li><li><code>.alt</code></li><li><code>.shift</code></li><li><code>.meta</code></li></ul></li><li><p><strong>组件</strong></p><p>一个组件的 <code>data</code> 选项必须是一个函数，每个实例可以维护一份被返回对象的独立的拷贝。</p><ul><li><p>在组件上使用v-model</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;custom-input&#x27;</span>, &#123;</span><br><span class="line">  props: [<span class="string">&#x27;value&#x27;</span>],</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;input</span></span><br><span class="line"><span class="string">      v-bind:value=&quot;value&quot;</span></span><br><span class="line"><span class="string">      v-on:input=&quot;$emit(&#x27;input&#x27;, $event.target.value)&quot;</span></span><br><span class="line"><span class="string">    &gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">custom-input</span> <span class="attr">v-model</span>=<span class="string">&quot;searchText&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">custom-input</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过插槽分发内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alert-box</span>&gt;</span></span><br><span class="line">  Something bad happened.</span><br><span class="line"><span class="tag">&lt;/<span class="name">alert-box</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&#x27;alert-box&#x27;, &#123;</span><br><span class="line">  template: `</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo-alert-box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Error!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  `</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>动态组件：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 组件会在 `currentTabComponent` 改变时改变 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">v-bind:is</span>=<span class="string">&quot;currentTabComponent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Prop</strong></p><ul><li><p>大小写</p></li><li><p>prop类型</p></li><li><p>非Prop的特性</p><ul><li><p>替换/合并已有的特性</p></li><li><p>禁用特性继承，可以手动决定这些特性会被赋予哪个元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;base-input&#x27;</span>, &#123;</span><br><span class="line">  inheritAttrs: <span class="literal">false</span>,</span><br><span class="line">  props: [<span class="string">&#x27;label&#x27;</span>, <span class="string">&#x27;value&#x27;</span>],</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;label&gt;</span></span><br><span class="line"><span class="string">      &#123;&#123; label &#125;&#125;</span></span><br><span class="line"><span class="string">      &lt;input</span></span><br><span class="line"><span class="string">        v-bind=&quot;$attrs&quot;</span></span><br><span class="line"><span class="string">        v-bind:value=&quot;value&quot;</span></span><br><span class="line"><span class="string">        v-on:input=&quot;$emit(&#x27;input&#x27;, $event.target.value)&quot;</span></span><br><span class="line"><span class="string">      &gt;</span></span><br><span class="line"><span class="string">    &lt;/label&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;base-input</span><br><span class="line">  v-model=&quot;username&quot;</span><br><span class="line">  required</span><br><span class="line">  placeholder=&quot;Enter your username&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">base-input</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p><strong>自定义事件</strong></p><ul><li><p>自定义组件的v-model</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;base-checkbox&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">// 修改默认的value为prop，input为event</span></span><br><span class="line">  model: &#123;</span><br><span class="line">    prop: <span class="string">&#x27;checked&#x27;</span>,</span><br><span class="line">    event: <span class="string">&#x27;change&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    checked: <span class="built_in">Boolean</span></span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;input</span></span><br><span class="line"><span class="string">      type=&quot;checkbox&quot;</span></span><br><span class="line"><span class="string">      v-bind:checked=&quot;checked&quot;</span></span><br><span class="line"><span class="string">      v-on:change=&quot;$emit(&#x27;change&#x27;, $event.target.checked)&quot;</span></span><br><span class="line"><span class="string">    &gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">base-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;lovingVue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">base-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>将原生事件绑定到组件</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;base-input&#x27;</span>, &#123;</span><br><span class="line">  inheritAttrs: <span class="literal">false</span>,</span><br><span class="line">  props: [<span class="string">&#x27;label&#x27;</span>, <span class="string">&#x27;value&#x27;</span>],</span><br><span class="line">  computed: &#123;</span><br><span class="line">    inputListeners: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> vm = <span class="built_in">this</span></span><br><span class="line">      <span class="comment">// `Object.assign` 将所有的对象合并为一个新对象</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Object</span>.assign(&#123;&#125;,</span><br><span class="line">        <span class="comment">// 我们从父级添加所有的监听器</span></span><br><span class="line">        <span class="built_in">this</span>.$listeners,</span><br><span class="line">        <span class="comment">// 然后我们添加自定义监听器，</span></span><br><span class="line">        <span class="comment">// 或覆写一些监听器的行为</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">// 这里确保组件配合 `v-model` 的工作</span></span><br><span class="line">          input: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            vm.$emit(<span class="string">&#x27;input&#x27;</span>, event.target.value)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;label&gt;</span></span><br><span class="line"><span class="string">      &#123;&#123; label &#125;&#125;</span></span><br><span class="line"><span class="string">      &lt;input</span></span><br><span class="line"><span class="string">        v-bind=&quot;$attrs&quot;</span></span><br><span class="line"><span class="string">        v-bind:value=&quot;value&quot;</span></span><br><span class="line"><span class="string">        v-on=&quot;inputListeners&quot;</span></span><br><span class="line"><span class="string">      &gt;</span></span><br><span class="line"><span class="string">    &lt;/label&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>现在 <code>&lt;base-input&gt;</code> 组件是一个<strong>完全透明的包裹器</strong>了，也就是说它可以完全像一个普通的 <code>input</code> 元素一样使用了：所有跟它相同的特性和监听器的都可以工作。</p></li><li><p><strong>Props, data, computed, method加载顺序</strong></p><p><img src="https://img2018.cnblogs.com/blog/857591/201903/857591-20190329180958410-1892531373.png" alt="img"></p></li><li><p><strong>关于子组件activated不执行的问题：需要设置keepAlive</strong></p><p><a href="">https://www.jianshu.com/p/eeda81293826</a></p></li><li><p> <strong>复杂类型，数据更新检测</strong></p></li></ol><pre><code>数组：&gt; Vue 不能检测以下变动的数组：&gt;&gt; 1. 当你利用索引直接设置一个项时，例如：`vm.items[indexOfItem] = newValue`&gt; 2. 当你修改数组的长度时，例如：`vm.items.length = newLength`- 变异方法：splice, sort, reserve, push, pop, shift, unshfit- 替换数组（非变异方法）：例如：`filter()`, `concat()` 和 `slice()`对象：- `Vue.set(vm.userProfile, &#39;age&#39;, 27)`- `Object.assign()`</code></pre><ol start="16"><li><p><strong>和渲染无关的数据</strong></p><p><code>vue</code>中<code>data</code>的数据默认便会进行双向数据绑定，若是将大量的和渲染无关的数据直接放置在<code>data</code>中，将会浪费双向数据绑定时所消耗的性能，将这些和渲染无关的数据进行抽离并配合<code>Object.freeze</code>进行处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> columnList = <span class="built_in">Object</span>.freeze([</span><br><span class="line">  &#123; <span class="attr">title</span>: <span class="string">&#x27;姓名&#x27;</span>, <span class="attr">key</span>: <span class="string">&#x27;name&#x27;</span>, <span class="attr">align</span>: <span class="string">&#x27;center&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">title</span>: <span class="string">&#x27;性别&#x27;</span>, <span class="attr">key</span>: <span class="string">&#x27;gender&#x27;</span>, <span class="attr">align</span>: <span class="string">&#x27;center&#x27;</span> &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></li><li><p><strong>路由组件传参，通过props解耦</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> User = &#123;</span><br><span class="line">  props: [<span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">  template: <span class="string">&#x27;&lt;div&gt;User &#123;&#123; id &#125;&#125;&lt;/div&gt;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/user/:id&#x27;</span>, <span class="attr">component</span>: User, <span class="attr">props</span>: <span class="literal">true</span> &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对于包含命名视图的路由，你必须分别为每个命名视图添加 `props` 选项：</span></span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">&#x27;/user/:id&#x27;</span>,</span><br><span class="line">      components: &#123; <span class="attr">default</span>: User, <span class="attr">sidebar</span>: Sidebar &#125;,</span><br><span class="line">      props: &#123; <span class="attr">default</span>: <span class="literal">true</span>, <span class="attr">sidebar</span>: <span class="literal">false</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>父子组件的加载、销毁顺序</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载顺序</span></span><br><span class="line">father beforeCreate -&gt; father created -&gt; father beforeMount -&gt; son beforeCreate -&gt; son created -&gt; son beforeMount -&gt; son mounted -&gt; father mounted</span><br><span class="line"></span><br><span class="line"><span class="comment">// 卸载顺序</span></span><br><span class="line">father beforeDestory -&gt; son beforeDestory -&gt; son destoryed -&gt; father destroyed</span><br></pre></td></tr></table></figure></li><li><p><strong>通过<code>@hook</code>监听子组件的生命周期</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;list @hook:mounted=<span class="string">&quot;listMounted&quot;</span> /&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;声明式渲染&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; app5 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  el: &lt;span class=&quot;string&quot;&gt;&amp;#x27;#app-5&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: &lt;span class=&quot;string&quot;&gt;&amp;#x27;Hello Vue.js!&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  methods: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reverseMessage: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.message = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.message.split(&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;).reverse().join(&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
    
    <category term="知识点" scheme="http://example.com/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>《吴军讲5G》摘要</title>
    <link href="http://example.com/archives/6a15.html"/>
    <id>http://example.com/archives/6a15.html</id>
    <published>2019-10-19T16:00:00.000Z</published>
    <updated>2021-04-15T13:14:20.280Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言、极简通信史：从1G到5G通信，到底经历了啥？"><a href="#前言、极简通信史：从1G到5G通信，到底经历了啥？" class="headerlink" title="前言、极简通信史：从1G到5G通信，到底经历了啥？"></a>前言、极简通信史：从1G到5G通信，到底经历了啥？</h2><ul><li><p>革命性变化：</p><ul><li><p>1G的诞生，模拟电路</p></li><li><p>从1G到2G，模拟电路-&gt;数字电路，由于采用了专用集成电路，单位能量传输和处理信息的能力提高了两个能量级</p><span id="more"></span></li><li><p>从2G到3G，实现了从语音通信到数据通信的飞跃。电话功能退居2线，上网成为主导。</p></li><li><p>从3G到4G，实现了移动通信网络和传统电信网络的融合，将云计算等互联网技术运用于移动通信，使得不同区域之间的流量能够动态平衡，大大地提高了带宽的使用率</p></li></ul></li><li><p>四个要点：</p><ul><li><p>单位能量的信息传输率越来越高</p></li><li><p>网络不断融合</p></li><li><p>设备的辐射越来越小（香农定律，5G基站距离小200-300m，功率数量级降低）</p></li><li><p>每一代都有新的主导型公司出现：1G是摩托罗拉，2G是诺基亚，3G、4G是苹果、谷歌和高通，5G是华为</p><blockquote><ul><li><p>2G，100的字要分成两条发送；3G以图片和小视频为主，QQ和语音；4G直播、大视频。手机上集成了越来越多的功能，涵盖人类的衣食住行各个方面，颠覆了很多传统行业，很多方面也在变革，如家庭电话、民用相机、MP3音乐播放器，掌上游戏机、交通卡、钱包等。</p></li><li><p>香农公式：C = W log2(1+S/N) b/s</p><p>C：信道的极限信息传输速率</p><p>W：为信道的带宽（以 Hz 为单位）<br>S：为信道内所传信号的平均功率<br>N：为信道内部的高斯噪声功率<br>信道的带宽或信道中的信噪比越大，则信息的极限传输速率就越高。 只要信息传输速率低于信道的极限信息传输速率，就一定可以找到某种办法来实现无差错的传输。 实际信道上能够达到的信息传输速率要比香农的极限传输速率低不少。</p></li></ul></blockquote></li></ul></li></ul><h2 id="1、谣言与真相：5G是不是伪需求？"><a href="#1、谣言与真相：5G是不是伪需求？" class="headerlink" title="1、谣言与真相：5G是不是伪需求？"></a>1、谣言与真相：5G是不是伪需求？</h2><ol><li>5G不是伪需求。虽然很多人在炒5G的概念，但是他确实是技术和商业发展到今天的需要。判断一个技术是不是伪需求，需要看它是不是符合“更少的能量传递、处理和存储更多信息这个商业发展的轴心趋势”。（举了IBM的小沃森，技术创造市场）</li><li>从历史的看，技术的成熟可以创造出原来想不到的市场。5G也是如此。</li><li>判断一个技术爆发的时间点是否到来了，要看它的预先要求是否满足，以及潜在的市场是否足够大。（举了日本的KDDI公司3G运营的失败）</li><li>很多东西，我们不仅要看不看好，还要看贵不贵，对于5G，它今后的单位流量费用不会像今天4G那么贵，虽然总的费用可能有所上涨。 </li></ol><h2 id="2、基因与演化：为什么谈5G必谈IoT？"><a href="#2、基因与演化：为什么谈5G必谈IoT？" class="headerlink" title="2、基因与演化：为什么谈5G必谈IoT？"></a>2、基因与演化：为什么谈5G必谈IoT？</h2><ol><li>5G和IoT相辅相成，是一个整体。通信的人强调连接和通信技术，计算机的人强调上网设备的范围。（波粒二象性，通信：速度快，计算机：广泛性）</li><li>目前的4G技术没有进一步升级的可能，因此5G势在必行。当然它发展的速度，受限于IoT的发展进程。</li><li>网络的融合是通信和计算机发展的趋势，任何和这个趋势相关的努力都是顺势而行，任何单独搞一套的做法都是逆势而行，会被淘汰。</li><li>5G会让很多技术落地，比如无人汽车、全息通讯等。</li></ol><h2 id="分工与合作：如何站在浪潮之巅"><a href="#分工与合作：如何站在浪潮之巅" class="headerlink" title="分工与合作：如何站在浪潮之巅"></a>分工与合作：如何站在浪潮之巅</h2><ol><li><p>无论是第一代，还是第二代互联网，全世界形成了一个高度耦合的产业，在这个产业里有详细的分工。</p></li><li><p>控制产业的是把控操作系统和核心芯片的企业，接下来是设备制造商和软件开发商。</p><blockquote><p>第一代互联网winIntel，第二代互联网是arm+Android。苹果吃独食。为什么第一代的公司在第二代不适应：基因决定的（在一个商业环境优化得非常适应环境的公司基因，很难在另一个生态环境重新适应和发展）。机会：变革式的洗牌+市场规模。</p></blockquote></li><li><p>每一代互联网，上述位置中的企业都会更换，这是由单位能量传输、存储和处理更多信息的要求决定的，也是由公司的基因决定的。在未来也是如此，为了适用IoT的发展，需要新的芯片技术和操作系统。</p></li><li><p>每一次这样大的变局，就给那么多人带来了机会。</p></li></ol><h2 id="4、变革与挑战：谁是5G时代的大赢家？"><a href="#4、变革与挑战：谁是5G时代的大赢家？" class="headerlink" title="4、变革与挑战：谁是5G时代的大赢家？"></a>4、变革与挑战：谁是5G时代的大赢家？</h2><ol><li>巨大规模的市场机会，关键在于网络的融合。互联网产业增值高，但是规模小，被几家大头公司掌控者；电信产业增值小，但是规模大。5G时代，传统互联网和移动互联网的融合，电信企业就能够靠计算机企业的技术力量提供新的增值服务了，当然，它们也就为计算机企业提供了一个更大的发展空间。类比软硬件融合，硬件企业产值高，但由于摩尔定律，价格不可能上涨，因此销售额没有增长，软件产业利润高，增长快，但是盘子小。软硬件融合举例：苹果、Google、亚马逊、小米。</li><li>没有技术含量的简单产品没有机会，系统级的创新才有。最好一个系统是有难度的，因为系统的表现不等于部分之和，只有那些做到系统大于部分之和的企业，才能在系统这个层面赢得竞争力。</li></ol><h2 id="5、机会与骗局：如何判断新技术的可靠性？"><a href="#5、机会与骗局：如何判断新技术的可靠性？" class="headerlink" title="5、机会与骗局：如何判断新技术的可靠性？"></a>5、机会与骗局：如何判断新技术的可靠性？</h2><ol><li><p>架构图。绿色是核心模块。更多的人可能是从应用入手。</p><p><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/5G_industry.jpeg" alt="5G行业"></p></li></ol><p>真实案例：</p><p>1）使用IoT及早的发现猪瘟，给每只猪安装可穿戴设备，监控其体温和进食，一旦发现有猪瘟，将这一栏的猪全部处理掉；</p><p>2）NBA的勇士队使用一种叫SportVU（它是数据采集的工具），识别每一位球员，跟踪人的踪迹，记录传球的配合的准确率，过人的效率和投篮的命中率等；另一种辅助工具MOCAP（大数据处理和智能决策工具），用来帮助制定的战术熟练的练好</p><ol><li><p>美国最大的移动通信运营商Version把5G的应用概括为八大模块：</p><ul><li>节能</li><li>跟踪</li><li>移动大数据</li><li>IoT</li><li>实时服务，eg: 车联网，汽车相互通信，实时作出优化的决定。远程手术</li><li>商业系统升级，eg: 比如现在的收银机要么连线，要么需要连WI-FI，5G之后就可以完全利用移动互联网通信</li><li>高速网络应用，eg: 多人连接家里的WI-FI玩游戏或者看电影会觉得卡；今天的VR发展不起来，主要障碍是网速</li><li>高可靠性网络应用，eg: 5G覆盖性好，不太容易出现掉线的情况，加上加密技术，以及不再使用WI-FI或热点上网（比如使用星巴克等免费的WI-FI），安全性会提高。大额金融交易敢用。</li></ul></li><li><p>如何判断是否商业操作，伪5G:</p><ol><li>任何一代移动通信的技术的进步，都会带来数量级（10倍）的改进，达不到就是假的。</li><li>在5G的说明中夹带私货。如前段时间在美国别嘲笑的伪5G手机，用了5Ge的标识</li><li>把实验测试当作商业效果来宣传。</li><li>5G的三大特点：<ul><li>宽带大、速度快</li><li>还需要做到高可靠、低时延</li><li>支撑海量并发设备</li></ul></li></ol></li></ol><h2 id="6、市场与博弈：世界各国如何布局5G？"><a href="#6、市场与博弈：世界各国如何布局5G？" class="headerlink" title="6、市场与博弈：世界各国如何布局5G？"></a>6、市场与博弈：世界各国如何布局5G？</h2><ol><li><p>5G的15版本（3GPP-R15）标准两步走：第一步，非独立组网模式（NSA），即采用4G为核心网，4G为主，5G为辅，对应的标准3GPP-R15-NSA，于2018年底确定了；第二步，独立组网模式（SA），5G作为核心网，只有5G基站工作，对应的标准3GPP-R15-SA，于2019年6月确定。</p><p><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/2019_NR_schedule_late_drop_pic3.jpg" alt="2019_NR_schedule"></p></li><li><p>5G的三大根本性原则：增强型移动宽带（eMBB）,超可靠低时延（uRLLC），海量机器类通信（mMTC）</p></li><li><p>邬贺铨院士估计，中国完成5G的建设，至少需要10年时间，投入1万亿以上。5G用户要达到移动通信的比列的85%，需要比4G时间长（中国花了6、7年）。5G有4万亿美元的市场</p></li><li><p>两个大阵营：华为（盟商：英特尔、诺基亚）提出5G方案是在6000兆赫，也就是在Wi-Fi之上，好处是技术简单，能较好的利用4G资源，绕过障碍物能力强，但是窄带宽，速度受限；另一个阵营高通（可能的盟商三星，高通虽然设计芯片，但是本生没有生产线，制造要依赖三星或者台积电），方案比较跃进，直接上到了28千兆赫，好处是和现在所有的无线通信都不冲突，宽带可以扩展的非常宽，但是技术复杂，传输距离短。邬贺铨认为中国5G未来还得使用28千兆赫（即所谓的毫米波）</p></li><li><p>目前全世界真正决定建设5G的电信强国只有中国、美国、韩国</p></li><li><p>目前中国5G取得了一些先机，华为的早起投入，中国较强的工程能力，中国的国力，以金钱换时间</p></li><li><p>大企业的优势：华为优势在于全面性，通信设备、基站建设、手机和芯片制造，还有标准上。高通，从来没有在移动通信中落伍，在半导体设计上的经验要比华为强。三星，3.5GHz的测试，象征意义</p></li><li><p>要与运行商结合，全世界用户超过5000万的运营商有24家。运营商比较保守，新品至少要在18个月后才接受，不太可能再诞生一个华为</p></li></ol><h2 id="7、想象与现实：VR、AR"><a href="#7、想象与现实：VR、AR" class="headerlink" title="7、想象与现实：VR、AR"></a>7、想象与现实：VR、AR</h2><ol><li>VR出现在实验室里，至今已经20年了，几年前Facebook收购了做VR眼镜的Oculus公司，热了几年，由于预先的技术没有达标，体验提别差，特别是头晕问题</li><li>VR三大技术难题：① 信息传输的速度不够快，通常需要高清视频（1080P）的20倍，图像跟不上，5G能满足；② 处理器是否复原出图像，今天最高速的GPU能满足，但是耗电、成本高，对无线VR设备效果难以提升；③ 需要反馈，头脑和身体协调，好的VR需要和可穿戴式设备结合，那就能彻底解决头晕问题</li><li>AR是将虚拟的场景叠加到现实的环境中，今天大部分AR都是骗人的把戏。现在AR可以全面实现信息的三维可视化，主要用于数字城市建设、商品展示、品牌营销、远程教育、旅游体验，文博展览、企业宣传和军事模拟等。</li><li>3D全息成像，需要的数据量巨大，做一个高清电视分辨率的3D全息成像，一秒钟的数据量是450亿个像素，而电视大约只有1亿像素。5G让其成为可能。配合特殊的手套等穿戴式设备，反馈贴近真实</li><li>5G让人与人直接物理连接的宽带增加，如果人们在未来想要增加独立性，而不是依附在某个社会组织中，还需要增加虚拟连接的宽带。</li></ol><h2 id="8、推演与预测：5G之后的通讯"><a href="#8、推演与预测：5G之后的通讯" class="headerlink" title="8、推演与预测：5G之后的通讯"></a>8、推演与预测：5G之后的通讯</h2><ol><li>马斯克的星链计划，近地距离卫星的飞行高度大约是200公里，是4G手机与基站的100倍左右，距离远受阻碍，耗费无线电带宽，传输率高不了。在塔克拉玛干沙漠可能有用</li><li>Google热气球，送入大气平流层，距离地面约20公里，风比较稳定，大气层不同的高度风速和风向是不同的，通过升降到特定高度，可以决定气球的位置。气球采用聚乙烯材料，从气候高12米，宽15米，太阳能供电。Google初衷，当时全世界还有2/3的地方没有被无线网络覆盖。Google放弃该计划的原因：① 气球难以控制，久了位置乱调整难；② 气球坏得很快，使用降落伞，降落位置控制不了，难以回收；③ 基站发射功率不够大，地面接收天线特别大，最高只能保证3G的速度；④ 全世界基站建设的速度远比想象的快，成本比搞这种气球低</li><li>用更少的能量传递更多的信息，永远是来判断一种移动通信方案乃至新技术是否靠谱的标准</li><li>你有你的计划，但世界另有计划</li></ol><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><p><a href="https://36kr.com/p/5216306?from=timeline&isappinstalled=0">中国5G势力最强18城排名出炉，六大维度还原真实潜力</a> </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言、极简通信史：从1G到5G通信，到底经历了啥？&quot;&gt;&lt;a href=&quot;#前言、极简通信史：从1G到5G通信，到底经历了啥？&quot; class=&quot;headerlink&quot; title=&quot;前言、极简通信史：从1G到5G通信，到底经历了啥？&quot;&gt;&lt;/a&gt;前言、极简通信史：从1G到5G通信，到底经历了啥？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;革命性变化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1G的诞生，模拟电路&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从1G到2G，模拟电路-&amp;gt;数字电路，由于采用了专用集成电路，单位能量传输和处理信息的能力提高了两个能量级&lt;/p&gt;</summary>
    
    
    
    <category term="书籍" scheme="http://example.com/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    <category term="前沿科技" scheme="http://example.com/categories/%E4%B9%A6%E7%B1%8D/%E5%89%8D%E6%B2%BF%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="摘要" scheme="http://example.com/tags/%E6%91%98%E8%A6%81/"/>
    
    <category term="5G" scheme="http://example.com/tags/5G/"/>
    
    <category term="前沿科技" scheme="http://example.com/tags/%E5%89%8D%E6%B2%BF%E7%A7%91%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>React小抄</title>
    <link href="http://example.com/archives/7035.html"/>
    <id>http://example.com/archives/7035.html</id>
    <published>2019-06-16T16:00:00.000Z</published>
    <updated>2021-04-15T13:06:06.673Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><strong>出现的根源</strong>：</p><ul><li>传统UI操作关注太多细节</li><li>应用程序状态分散在各处，难以追踪和维护</li></ul></li><li><p>React: 始终整体“刷新”页面，无需关注细节</p><span id="more"></span></li><li><p>Flux架构：单向数据流</p><p><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/20200602172026.png"></p></li><li><p><strong>component</strong></p></li><li><p><strong>render</strong></p></li><li><p><strong>jsx</strong>：直接在JavaScript代码中直接写HTML标记。本质：动态创建组件的语法糖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">const name &#x3D; &quot;Jimmy Luo&quot;;</span><br><span class="line">const element &#x3D; &lt;h1&gt;Hello, &#123;name&#125;&lt;&#x2F;h1&gt;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 被react解析</span><br><span class="line">const name &#x3D; &quot;Jimmy Luo&quot;;</span><br><span class="line">const element &#x3D; React.createElement(</span><br><span class="line">  &#39;h1&#39;,</span><br><span class="line">  null,</span><br><span class="line">  &#39;Hello, &#39;,</span><br><span class="line">  name</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p><strong>props</strong></p></li><li><p><strong>state</strong></p></li><li><p><strong>function component</strong></p></li><li><p><strong>immutability</strong></p></li><li><p><strong>React elements</strong>: React elements are first-class JavaScript objects; we can pass them around in our applications. To render multiple items in React, we can use an array of React elements.</p></li><li><p><strong>unique “key” prop</strong>: Keys tell React about the identity of each component which allows React to maintain state between re-renders. If a component’s key changes, the component will be destroyed and re-created with a new state</p></li><li><p><strong>Component Lifecycle</strong>: mounting(componentDidMount())-&gt;updating(componentDidUpdate())-&gt;unmouting(componentWillUnmount())</p><p><img src="https://my-images-space.oss-cn-shenzhen.aliyuncs.com/20200602181600.png"></p><ul><li>constructor<ol><li>用于初始化内部状态，很少使用</li><li>唯一可以直接修改state的地方</li></ol></li><li>getDerivedStateFromProps<ol><li>当state需要从props初始化时使用</li><li>尽量不要使用：维护两者状态一致性增加复杂度</li><li>每次render都会调用</li><li>典型场景：表单控件获取默认值</li></ol></li><li>componentDidMount<ol><li>UI渲染完成后调用</li><li>只执行一次</li><li>典型场景：获取外部资源</li></ol></li><li>componnetWillUnmount<ol><li>组件移除时被调用</li><li>经典场景：资源释放</li></ol></li><li>getSnapshotBeforeUpdate<ol><li>在页面render之前调用，state已更新</li><li>典型场景：获取render之前的DOM状态</li></ol></li><li>componentDidUpdate<ol><li>每次UI更新时被调用</li><li>典型场景：页面需要根据props变化重新获取数据</li></ol></li><li>shouldComponentUpdate<ol><li>决定Virtual DOM是否重绘</li><li>一般可以有PureComponent自动实现</li><li>典型场景：性能优化</li></ol></li></ul></li><li><p><strong>Controlled component</strong></p></li></ul><h2 id="dva"><a href="#dva" class="headerlink" title="dva"></a>dva</h2><ul><li>dva = React-router + Redux + Redux-saga</li><li><strong>Action</strong>: 一个对象，描述事件。type, payload</li><li><strong>connect</strong>： 一个函数，绑定State到View</li><li><strong>dispatch</strong>: 一个函数，绑定Action到State</li><li><strong>Model</strong>: 一个对象，所有的逻辑都定义在它上面。namespace, state, reducers, effects, subscriptions</li><li><strong>reducer</strong>：一个函数，接受state和action，返回老的或者新的state。Action 处理器，用来处理同步操作</li><li><strong>effect</strong>: 一个函数，Action处理器，用来处理异步动作，基于Redux-saga实现。action, {call（调用异步逻辑）, put（出发action）, select（从state获取数据）}</li><li><strong>Subscription</strong>: 用于订阅一个数据源，然后根据需要 dispatch 相应的 action</li><li><strong>Router</strong>: Injected Props: location, params, children</li></ul><h2 id="rerender的真正条件"><a href="#rerender的真正条件" class="headerlink" title="rerender的真正条件"></a>rerender的真正条件</h2><ol><li>当前组件的State中的属性改变时且当前组件的shouldcomponentupdate返回true，那么当前组件会rerender</li><li>组件的props中的任一属性的值有变化(即使这个任一属性的值是对象，变化的仅仅是该对象中的某属性的值，此刻也算props发生了变化)且当前组件的shouldcomponentupdate return true时且当期组件所有父级以上组件的shouldcomponentupdate return true，当前组件才会re-render</li><li>当前组件的shouldcomponentupdate即使返回false，当前组件里子组件若满足1中的条件，这个子组件依然会重新渲染</li></ol>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;出现的根源&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传统UI操作关注太多细节&lt;/li&gt;
&lt;li&gt;应用程序状态分散在各处，难以追踪和维护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React: 始终整体“刷新”页面，无需关注细节&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="react" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/react/"/>
    
    
    <category term="react" scheme="http://example.com/tags/react/"/>
    
    <category term="知识点" scheme="http://example.com/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>本地电脑如何变成服务器？</title>
    <link href="http://example.com/archives/4906.html"/>
    <id>http://example.com/archives/4906.html</id>
    <published>2019-05-21T19:03:25.000Z</published>
    <updated>2021-04-15T13:14:20.284Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;本人住在深圳的某城中村，刚来深圳用着门口贴着“网络贩子”的网，开始觉得自己拉光纤成本太高。开始用了80块钱8M的网，下行速度600KB/s左右，上行速度只有10KB/s，传个10M的文件要老半天，手机玩游戏根本不敢连WIFI，室友打一个网络电话（通常就是2小时左右）我就视频啥的都看不了，只能等他打完才能看。<span id="more"></span>一年后，受不了，让“老板”给我免费加到10M，下行速度有所提升，能达到1MB/s，上行速度也提了一点点。最近那网络老是故障，实在受不了，决定拉个宽带！开始看了下移动的套餐，话费达到69元每个月，可以免费装50M的宽带，然后去营业厅问，让我打10086，打电话过去查了一下说这边跟铁通合作了，只能拉铁通的网，打了好几次铁通的客服都打不通，然后又跟移动的交涉了几次，一个月过去了，未果，只能放弃；然后就试着帮联通的，也是陆陆续续，半个月后被告知我住的地方办不了。哎！！想着家里偏远农村一天都拉了一个月49元200M的光纤，深圳为啥办个网那么难。最后只能选择比较贵点的电信了，微信里电信的客服服务相当的好，1天就上门来装宽带。自己选着了一个1399元/年的200M套餐，然后拉了一个隔壁的“老王”一起分摊一下，一个月下来我们宿舍就60元左右，真是爽歪歪呀！！！</p><p><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/computer2server/telecom_broadband_package.jpg" alt="电信宽带套餐"><br><br></p><div algin=center>    <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/speedtest.png" /></div><br>> 要千兆的路由器和千兆的网卡才能达到这个速度！<br>&emsp;&emsp;OK！不吐槽了！下面进入正题。<h2>一、确认自己WAN口IP和上网IP一致且是公网</h2><div align=center>    <figure>        <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/WAN_IP.jpg" />        <figcaption align=center>WAN口IP</figcaption>    </figure></div><br/><div align=center>    <figure>        <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/IP.jpg" />        <figcaption align=center>上网IP</figcaption>    </figure></div><br><div align=center>    <figure>        <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/ping_web.jpg" />        <figcaption align=center>ping测试是否为公网</figcaption>    </figure></div><br>> 电信的220开头的不是公网，138开头的为公网。<h2>二、端口映射</h2>&emsp;&emsp;我用的是TP-LINK路由器，其他路由器类似！<div align=center>    <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/router_app.jpg" /></div>&emsp;&emsp;1. 在配置前，先设置IP和MAC绑定，不然每次重启电脑，IP就可能会变；<br>&emsp;&emsp;2. 虚拟服务器设置；<div align=center>    <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/set_server.jpg" /></div>&emsp;&emsp;3. 由于是动态IP，最好绑定一个域名，不然每次光猫重启IP都会变。进去DDNS设置，TP-LINK注册一个ID可申请一个域名，或者用花生壳的也可以！<br><br>> 1) 一般网络运营商为了避免被黑客攻击和扫描，都是采用动态IP。如果想要静态IP可与运营商联系或者去购买一个IP盒子；    1) 电信的一些常用的端口如80，8080被屏蔽掉了。<h2>栗子：搭建一个网站服务</h2>&emsp;&emsp;我这里就安装一个WampServer(windows+apache+mysql+php)，其他想用phpstudy、IIS、虚拟机和docker等其他服务的，请另外选择！<br>&emsp;&emsp;1. 配置刚才映射的端口并配置apache外网可以访问；<div align=center>    <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/apache_config.png" /></div>&emsp;&emsp;2. 允许应用通过防火墙通信，或者关闭防火墙；<div align=center>    <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/firewall.jpg" /></div>&emsp;&emsp;3. 进行外网测试。 <div align=center>    <img src="https://raw.githubusercontent.com/LuoJimmy/picture-server/master/computer2server/web_access_result.jpg" /></div><hr>&emsp;&emsp;都这里就结束了。以后可以开启各种玩法了。如网站、FTP、监控、云盘、测试、学习等等。]]></content>
    
    
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;本人住在深圳的某城中村，刚来深圳用着门口贴着“网络贩子”的网，开始觉得自己拉光纤成本太高。开始用了80块钱8M的网，下行速度600KB/s左右，上行速度只有10KB/s，传个10M的文件要老半天，手机玩游戏根本不敢连WIFI，室友打一个网络电话（通常就是2小时左右）我就视频啥的都看不了，只能等他打完才能看。</summary>
    
    
    
    <category term="教程" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    <category term="服务器" scheme="http://example.com/categories/%E6%95%99%E7%A8%8B/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>《极客与团队》书摘</title>
    <link href="http://example.com/archives/cbaa.html"/>
    <id>http://example.com/archives/cbaa.html</id>
    <published>2019-05-18T16:00:00.000Z</published>
    <updated>2021-04-15T13:14:20.283Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本书是专门写给程序员看的团队管理书籍。比起其他管理书籍，这本书比较薄，才170多页。我没看此书此前，在自己项目管理中或多或少用了里面的一些理念，这本书很好的把精华写出来了。本书其实围绕如何维护一个健康有效率的社区，很多经验可以借鉴一下。</p></blockquote><span id="more"></span><!-- ![封面](https://raw.githubusercontent.com/LuoJimmy/picture-server/master/s26354473.jpg) --><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/s26354473.jpg" title="封面" style="margin-left: auto; margin-right: auto"/><p>​    此书分为六章。第一章以天才程序员开头，毕竟天才极少，还是要靠团队完成任务。由此引出去全书的主题：HRT(hummer respect trust)，谦虚、尊重、信任。第二章培养团队文化，文化是啥？为什么要培养团队文化？以及一些好的方法。第三章把<del>项目经理</del>（主管）比作是大海航行的船长，”仆人式主管”，须为团队服务，然后还讲了领导的一些处世之道和激励。第四章将如何对付害群之马，保护团队。第五章如何管理团队组织。第六章程序员也要有服务用户意识，软件需要用户友好，需要包装和营销。</p><h2 id="第一章-天才程序员的传说"><a href="#第一章-天才程序员的传说" class="headerlink" title="第一章 天才程序员的传说"></a>第一章 天才程序员的传说</h2><h3 id="帮我把代码藏起来"><a href="#帮我把代码藏起来" class="headerlink" title="帮我把代码藏起来"></a>帮我把代码藏起来</h3><ul><li>人的本性——没有人喜欢人批评，特别是未完成的工作。缺乏安全感，可能会隐藏更大的问题。</li></ul><h3 id="天才的传说"><a href="#天才的传说" class="headerlink" title="天才的传说"></a>天才的传说</h3><ul><li>迈克尔&middot;乔丹、莱纳斯&middot;托瓦兹、比尔&middot;盖茨。集体荣誉算在一个人身上。</li><li>我们需要榜样的激励。</li></ul><h3 id="隐瞒是有害的"><a href="#隐瞒是有害的" class="headerlink" title="隐瞒是有害的"></a>隐瞒是有害的</h3><ul><li>闭门造车。</li><li>确保失败尽早发生，尽快发生，经常发生。尽早分享不仅仅可以防止一开始就步入歧途和检验创意。</li><li>公车因子，保证工作的可替代性。</li><li>足够多的眼睛可以确保你的项目保持正确的方向。</li></ul><h3 id="团队才是王道"><a href="#团队才是王道" class="headerlink" title="团队才是王道"></a>团队才是王道</h3><ul><li>软件开发是集体项目</li></ul><h3 id="三大支柱"><a href="#三大支柱" class="headerlink" title="三大支柱"></a>三大支柱</h3><ul><li>谦虚、尊重、信任</li></ul><h3 id="HRT实战"><a href="#HRT实战" class="headerlink" title="HRT实战"></a>HRT实战</h3><ul><li><p>放下自负</p></li><li><p>学会批评和接受批评。建设性批评，谦虚的把问题归到自己头上。别把你的自尊和你的代码等同起来</p></li><li><p>快速失败-学习-迭代</p></li><li><p>不要等到完美的时候才出来，只要产品大致可以，就立刻把他按照原样公布给大众。</p></li><li><p>事后检讨。”学到了什么”，”怎么改正”。</p><table>  <tr><th width="100">简要</th><td></td></tr>  <tr><th>时间线</th><td></td></tr>  <tr><th>主因</th><td></td></tr>  <tr><th>影响和损失评估</th><td></td></tr>  <tr><th>立即修改正问题的步骤</th><td></td></tr>  <tr><th>防止此事再次发生的步骤</th><td></td></tr>  <tr><th>得到的教训</th><td></td></tr></table></li><li><p>为学习预留时间。人一旦攀至顶峰，往往就会停止学习。偶尔跳出舒适区，接受挑战。</p></li><li><p>学习保持耐性。</p></li><li><p>学会示弱。承认自己的无知</p></li></ul><h2 id="培养出色的团队"><a href="#培养出色的团队" class="headerlink" title="培养出色的团队"></a>培养出色的团队</h2><h3 id="什么是文化"><a href="#什么是文化" class="headerlink" title="什么是文化"></a>什么是文化</h3><ul><li>团队文化就像是一块含有酵母的面团：酵母(团队创始人)能将菌群培养物植入生面团(团队新人)，从而变成一块好吃的面包(团队)。</li><li>团队文化不仅仅包含编写代码的方式或者是成员之间的相处之道，它还包含所有人都认可的经验、价值观、目标。</li></ul><h3 id="为什么要关心它"><a href="#为什么要关心它" class="headerlink" title="为什么要关心它"></a>为什么要关心它</h3><ul><li>接受有益改进，同时防御有害的激进变化的团队文化。</li><li>将大部分的时间放在开发优秀软件上面。</li><li>近朱者赤近墨者黑。自我选择。</li><li>招聘文化契合度高的人。</li></ul><h3 id="文化和人"><a href="#文化和人" class="headerlink" title="文化和人"></a>文化和人</h3><ul><li>让出色的工程师们放心地分享创意，并且在决策过程中拥有发言权。</li><li>基于共识决策的团队。”共识”是指每个人都对产品的成功抱有强烈的主人翁精神和责任感，同时领队愿意倾听团队的意见。</li><li>大方向一致，设立章程。</li></ul><h3 id="优秀团队文化中的沟通模式"><a href="#优秀团队文化中的沟通模式" class="headerlink" title="优秀团队文化中的沟通模式"></a>优秀团队文化中的沟通模式</h3><ul><li>同步沟通，如开会，人越少越好。异步沟通，如Email，听众越多越好。</li></ul><h3 id="高层面同步"><a href="#高层面同步" class="headerlink" title="高层面同步"></a>高层面同步</h3><ul><li>任务宗旨。准确定义好产品的方向和范围。什么该做，什么不该做。任务宗旨应该是与时俱进的。</li><li>开会要有效率。<ul><li>只邀请一定要参加的人。</li><li>开会前要决定好议程，而且要事先通知所有人。</li><li>达成目的后应提早散会。</li><li>注意别跑题。</li><li>尽量把会议安排在休息时间前后(比如午饭时间，下班前等)。</li></ul></li><li>地理分散的团队，除了用媒介沟通，还应该时不时的见见同事。</li><li>设计文档。随项目变化而变化。权衡时间，不要唯设计文档论。</li></ul><h3 id="每日进行讨论"><a href="#每日进行讨论" class="headerlink" title="每日进行讨论"></a>每日进行讨论</h3><ul><li>邮件列表</li><li>在线聊天</li></ul><h3 id="使用bug跟踪系统"><a href="#使用bug跟踪系统" class="headerlink" title="使用bug跟踪系统"></a>使用bug跟踪系统</h3><h3 id="沟通也是工程的一部分"><a href="#沟通也是工程的一部分" class="headerlink" title="沟通也是工程的一部分"></a>沟通也是工程的一部分</h3><ul><li>代码注释。一般是用来说明代码里缺失的部分，以及起得不好的名字，然后把代码的功能注释一遍。注释应该尽量解释为什么代码要这样写，而不是解释代码做了什么。</li><li>在源文件署名。团队中，可以不署名，在版本控制中可以查到谁的修改。</li><li>每个提交都经过代码审查。</li><li>真正的测试和发布流程。高自动化，方便可以频繁发布</li></ul><h3 id="说到底真正重要的还是代码本身"><a href="#说到底真正重要的还是代码本身" class="headerlink" title="说到底真正重要的还是代码本身"></a>说到底真正重要的还是代码本身</h3><h2 id="大海航行靠船长"><a href="#大海航行靠船长" class="headerlink" title="大海航行靠船长"></a>大海航行靠船长</h2><blockquote><p>市面上写给经理们看的管理书很多，而本章却是专门写给那些客串管理的工程师看的</p></blockquote><h3 id="自然界中没有真空地带"><a href="#自然界中没有真空地带" class="headerlink" title="自然界中没有真空地带"></a>自然界中没有真空地带</h3><ul><li>软件项目就和船一样：如果没人领航，那群极客只会闲坐在那里无所事事。</li></ul><h3 id="Deprecated-Manager"><a href="#Deprecated-Manager" class="headerlink" title="@Deprecated Manager"></a>@Deprecated Manager</h3><ul><li>以前的经理对待的员工的办法通常和赶骡车的马夫用的差不多：”萝卜+大棒”，但是工程师需要时间和空间进行创造性思考，这种方式不适应。</li></ul><h3 id="主管才是新经理"><a href="#主管才是新经理" class="headerlink" title="主管才是新经理"></a>主管才是新经理</h3><ul><li><p>经理要关心怎么干，而主管只负责设定大方向。</p></li><li><p>TL(技术主管，tech leader)： 负责产品整体（或者部分）技术走向。</p><p>TLM(技术主管经理，tech leader manager)：除了负责产品整体（或者部分）技术走向，还需关系手下工程师的职业发展和愉快程度。</p></li></ul><h3 id="唯一要担心的就是……好吧，所有的事"><a href="#唯一要担心的就是……好吧，所有的事" class="headerlink" title="唯一要担心的就是……好吧，所有的事"></a>唯一要担心的就是……好吧，所有的事</h3><ul><li>管理工作不好量化，会感到成就感低，但是要反过来想，如果领导一支优秀工程师组建的团队，那代码的产量能达到多少！</li></ul><h3 id="仆人式领导"><a href="#仆人式领导" class="headerlink" title="仆人式领导"></a>仆人式领导</h3><ul><li>遵循HRT，消除官僚作风。</li></ul><h3 id="反模式"><a href="#反模式" class="headerlink" title="反模式"></a>反模式</h3><ul><li>反模式：雇佣听话的人。</li><li>反模式：无视表现不佳的人。设定好一个期限，完成一些目标。目标要设的小点，循序渐进。手把手帮助表现不佳的员工。</li><li>反模式：无视人际关系</li><li>反模式：和谁都是朋友</li><li>反模式：降低招聘标准</li><li>反模式：把团队当小孩</li></ul><h3 id="领袖的处事之道"><a href="#领袖的处事之道" class="headerlink" title="领袖的处事之道"></a>领袖的处事之道</h3><ul><li><p>放下自负，鼓励多提问，学会聆听，学会道歉</p></li><li><p>做一个禅师。保持淡定和冷静。多问问题，引导工程师解决自己的问题。</p></li><li><p>成为催化剂。引导大家达成共识。</p><p>让你的团队了解到你的帮助他们解决障碍的意愿和能力。</p><p>给与他们安全感，培养敢于冒风险的氛围。</p></li><li><p>当一个导师。三个基本条件：</p><ul><li>熟悉团队的流程；</li><li>向他人解释事物的能力；</li><li>估计被指导的人到底需要多少帮助的能力。</li></ul></li><li><p>设置明确的目标。每个人都在同一方向上使劲吗？定期检查他们有没有偏离方向。</p></li><li><p>坦诚。坦诚有些事不能告诉成员。避免使用”三明治赞美法”，这样可能不能准确传达自己的意图。直接了当反馈和批评，但是注意自己的表达方式，不要让工程师被你弄得很防备。</p></li><li><p>记录快乐程度。不但关注职业生涯，更是可以让你的队员有机会得以成长。每次在会议结束之前问队员”你还有什么要求吗”</p></li><li><p>其他建议和窍门：</p><ul><li>不必事事躬亲，但也不能当甩手掌柜；</li><li>寻找接班人；</li><li>知道什么时候做恶人；</li><li>保护团队不受混乱干扰；</li><li>帮团队遮风挡雨；</li><li>告诉团队他们做得很好。</li></ul></li></ul><h3 id="人是植物"><a href="#人是植物" class="headerlink" title="人是植物"></a>人是植物</h3><ul><li>人像植物一样：有些需要更多的光照，有些则需要更多的水分。对应着方向和激励。</li></ul><h3 id="内部激励和外部激励"><a href="#内部激励和外部激励" class="headerlink" title="内部激励和外部激励"></a>内部激励和外部激励</h3><ul><li>达到内部激励目的的三样东西。<ul><li>自主。自主权，激发主人翁精神。</li><li>精通。让工程师有机会学习新技能。</li><li>目标。让他们知道自己的努力是有价值的。</li></ul></li></ul><h2 id="对付害群之马-会拖累团队的人"><a href="#对付害群之马-会拖累团队的人" class="headerlink" title="对付害群之马(会拖累团队的人)"></a>对付害群之马(会拖累团队的人)</h2><blockquote><p>作者是结合自己的实际，由于SVN项目是开源项目，里面涉及到很多外部人员的相处之道。</p></blockquote><h3 id="什么是”害群”"><a href="#什么是”害群”" class="headerlink" title="什么是”害群”"></a>什么是”害群”</h3><ul><li>是指行为，而不是指人。规定好哪些是不可容忍的行为，然后予以惩戒。</li></ul><h3 id="保护团队"><a href="#保护团队" class="headerlink" title="保护团队"></a>保护团队</h3><ul><li>HRT</li><li>第二章内容</li></ul><h3 id="发现威胁"><a href="#发现威胁" class="headerlink" title="发现威胁"></a>发现威胁</h3><ul><li>团队的注意力和专注力最容易受到威胁。<ul><li>不尊重别人的时间；</li><li>自负；</li><li>过分索求；</li><li>幼稚或是莫名其妙的交流；</li><li>偏执妄想；</li><li>完美主义。转移注意力；</li><li>别去搭理哪些挑衅的家伙；</li><li>别太感情用事；</li><li>抓住重点；</li><li>对付挑衅要不卑不亢；</li><li>关注长远。问自己两个关键的问题：<ul><li>虽然短期内会损失一些注意力和专注力，长远来讲你真的相信项目会因此受益吗？</li><li>你相信这些冲突最终会以有益的方式解决吗？</li></ul></li></ul></li></ul><h2 id="操作组织的艺术"><a href="#操作组织的艺术" class="headerlink" title="操作组织的艺术"></a>操作组织的艺术</h2><h3 id="优点、缺点和策略"><a href="#优点、缺点和策略" class="headerlink" title="优点、缺点和策略"></a>优点、缺点和策略</h3><h3 id="理想的情况：团队在公司里应该是怎样运作的"><a href="#理想的情况：团队在公司里应该是怎样运作的" class="headerlink" title="理想的情况：团队在公司里应该是怎样运作的"></a>理想的情况：团队在公司里应该是怎样运作的</h3><ul><li>在完美经理手下干活。要求更多的责任，不单要专注手头的任务。</li><li>用于冒险</li></ul><h3 id="现实的情况：当环境成为成功路上的绊脚石"><a href="#现实的情况：当环境成为成功路上的绊脚石" class="headerlink" title="现实的情况：当环境成为成功路上的绊脚石"></a>现实的情况：当环境成为成功路上的绊脚石</h3><ul><li>在糟糕的经理手下当值。特点：害怕失败，缺乏安全感，保守，自私</li><li>办公室高手，敬而远之。</li><li>糟糕的组织。不以工程师为核心，鼓吹商业</li></ul><h3 id="操纵你的组织"><a href="#操纵你的组织" class="headerlink" title="操纵你的组织"></a>操纵你的组织</h3><ul><li><p>向上请求许可，向下请求谅解。</p></li><li><p>路是人走出来的。寻求改变的办法就是拉拢群众。</p></li><li><p>学习向上管理。做承诺的时候要谨慎，而干工作的时候要尽最大努力。</p><p>“进取型”（用户看得到的）和”防御性”（产品长期健康的）工作。</p></li><li><p>运气与互惠的经济学。</p></li><li><p>晋升到安全的位置。掌控自己在公司的命运。</p></li><li><p>和有能量的人交朋友。</p></li><li><p>如何通过E-mail向忙碌的管理层求助。10秒钟读完，”三个论点，一个行动”。</p></li></ul><h3 id="B计划：走为上策"><a href="#B计划：走为上策" class="headerlink" title="B计划：走为上策"></a>B计划：走为上策</h3><ul><li>只做正确的事，随时准备被炒</li></ul><h3 id="不要放弃"><a href="#不要放弃" class="headerlink" title="不要放弃"></a>不要放弃</h3><h2 id="用户也是人"><a href="#用户也是人" class="headerlink" title="用户也是人"></a>用户也是人</h2><blockquote><p>主要是用户体验方面的。营销、易用性、客服</p></blockquote><h3 id="管理大众的印象"><a href="#管理大众的印象" class="headerlink" title="管理大众的印象"></a>管理大众的印象</h3><ul><li>软件也需要营销</li><li>关心用户对软件的情感诉求</li><li>注意第一印象</li><li>承诺的时候要谨言，做产品的时候要超过预期</li><li>尊重业界分析师</li><li>关注用户，其他东西会随之而来</li><li>目标用户</li><li>考虑入门的门槛</li><li>衡量使用数量，而不是用户数量</li><li>速度很重要</li><li>不要大而全。与其拙劣地解决所有问题女，还不如解决大多数用户都真正会遇到的问题，然后做到最好</li><li>隐藏复杂性</li></ul><h3 id="管理和用户之间的关系"><a href="#管理和用户之间的关系" class="headerlink" title="管理和用户之间的关系"></a>管理和用户之间的关系</h3><ul><li>听取用户反馈</li><li>不要有优越感</li><li>保持耐心</li><li>营造信任和愉悦的氛围</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本书是专门写给程序员看的团队管理书籍。比起其他管理书籍，这本书比较薄，才170多页。我没看此书此前，在自己项目管理中或多或少用了里面的一些理念，这本书很好的把精华写出来了。本书其实围绕如何维护一个健康有效率的社区，很多经验可以借鉴一下。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="书籍" scheme="http://example.com/categories/%E4%B9%A6%E7%B1%8D/"/>
    
    <category term="计算机管理" scheme="http://example.com/categories/%E4%B9%A6%E7%B1%8D/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="书摘" scheme="http://example.com/tags/%E4%B9%A6%E6%91%98/"/>
    
  </entry>
  
  <entry>
    <title>window gitbash如何修改可恶的蓝色字体</title>
    <link href="http://example.com/archives/b41b.html"/>
    <id>http://example.com/archives/b41b.html</id>
    <published>2018-12-20T09:28:27.000Z</published>
    <updated>2021-04-15T14:37:18.892Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1、问题</strong><br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/gitbash/1044792-20181220171435949-1244386526.png"><br>    这完全看不清啊！！</p><span id="more"></span><p><strong>2、环境</strong><br>　　git version 2.19.0<br><strong>3、解决</strong><br>　　1）编辑/etc/bash.bashrc<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/gitbash/1044792-20181220171819672-575950677.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Uncomment to use the terminal colours set in DIR_COLORS</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(dircolors -b /etc/DIR_COLORS)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>　　2）编辑/etc/DIR_COLORS文件<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/gitbash/1044792-20181220172417893-2099021541.png"><br>    想改成其他颜色，请参看上面的数字对应的颜色说明<br><strong>4、效果</strong><br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/gitbash/1044792-20181220172709215-1092394423.png"></p><p>OVER!!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;1、问题&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://my-images-space.oss-cn-shenzhen.aliyuncs.com/gitbash/1044792-20181220171435949-1244386526.png&quot;&gt;&lt;br&gt;    这完全看不清啊！！&lt;/p&gt;</summary>
    
    
    
    <category term="windows" scheme="http://example.com/categories/windows/"/>
    
    <category term="环境" scheme="http://example.com/categories/windows/%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
    <category term="gitbash" scheme="http://example.com/tags/gitbash/"/>
    
  </entry>
  
  <entry>
    <title>nvm use exit status 1</title>
    <link href="http://example.com/archives/a434.html"/>
    <id>http://example.com/archives/a434.html</id>
    <published>2017-08-23T01:36:03.000Z</published>
    <updated>2021-04-15T14:39:10.438Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ nvm use 7.2.0</span><br><span class="line"><span class="built_in">exit</span> status 1: <span class="string">&#x27;D:\My&#x27;</span> ▒▒▒▒▒ڲ▒▒▒▒ⲿ▒▒▒Ҳ▒▒▒ǿ▒▒▒▒еĳ▒▒▒</span><br><span class="line">▒▒▒▒▒▒▒▒▒ļ▒▒▒</span><br></pre></td></tr></table></figure><p>nvm安装的时候，路径不要中文和空格</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ nvm use 7.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; status 1: &lt;span class=&quot;string&quot;&gt;&amp;#x27;D:\My&amp;#x27;&lt;/span&gt; ▒▒▒▒▒ڲ▒▒▒▒ⲿ▒▒▒Ҳ▒▒▒ǿ▒▒▒▒еĳ▒▒▒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;▒▒▒▒▒▒▒▒▒ļ▒▒▒&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;nvm安装的时候，路径不要中文和空格&lt;/p&gt;</summary>
    
    
    
    <category term="node" scheme="http://example.com/categories/node/"/>
    
    <category term="环境" scheme="http://example.com/categories/node/%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="nvm" scheme="http://example.com/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>搭建CNPM私有库</title>
    <link href="http://example.com/archives/a4e.html"/>
    <id>http://example.com/archives/a4e.html</id>
    <published>2017-06-26T03:12:12.000Z</published>
    <updated>2021-04-15T14:23:47.092Z</updated>
    
    <content type="html"><![CDATA[<p>主要是玩玩CNPM私有库，理解里面的原理，有助于部署到服务器上和使用私用库来管理代码。</p><h2 id="一、环境准备："><a href="#一、环境准备：" class="headerlink" title="一、环境准备："></a>一、环境准备：</h2><ul><li>Windows操作系统；</li><li>MySQL数据库（支持’mysql’, ‘sqlite’, ‘postgres’, ‘mariadb’。这里选择MySQL）</li><li>CNMP私有库源码（<a href="https://github.com/cnpm/cnpmjs.org%EF%BC%89">https://github.com/cnpm/cnpmjs.org）</a><span id="more"></span></li></ul><h2 id="二、搭建系统"><a href="#二、搭建系统" class="headerlink" title="二、搭建系统"></a>二、搭建系统</h2><p>CNPM源码目录结构<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170626103208899-2014710923.png"></p><ol><li>将docs文件夹里面的db.sql部署到MySQL中：<br> 开启MySQL-&gt;打开GUI界面-&gt;创建一个新的数据库，导入db.sql<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170626103532539-479758475.png"></li><li>设置CNMPJS配置参数，目录config/index.js<br> 1） 修改数据库源和注册地址（npm包下载安装的地址）；<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170825091905839-1239357311.png"><br> 2） 添加管理用户，用默认的也行。（也可以用命令行cnpm adduser进行添加，前提是要把cnmp的库源修改成本地私有库的，后面会讲到）<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170810090144324-1401326914.png"><br> 3） 安装npm依赖库，命令行，npm install<br> 4） 运行，node dispatch.js<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170626104846508-192988182.png"><br>浏览器效果<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170626105019508-565491505.png"><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2>1、切换cnpm源，<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm config <span class="built_in">set</span> registry http://localhost:7001  //或者在当前电脑用户目录下配置.cnpmrc文件</span><br></pre></td></tr></table></figure><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170626105612993-600716662.png"><br>　　该方法只对于该电脑用户有效，如果想对所有的用户有效，需在node的安装目录下配置<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170626110049227-2055105501.png"><br>2、 发布项目源码到私有库。<br> 先登录，cnpm login, 输入用户名、密码、邮箱（上面步骤设置的）；<br> 发布项目（项目的package.json，README.md配置好，以便查看使用），cnpm publish<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170810090144324-1401326914.png"><br>3、 发布后就可以在私有库查看了<br><img src="http://my-images-space.oss-cn-shenzhen.aliyuncs.com/setUpCNPM/1044792-20170626111041368-298724570.png"><br>如果你有啥问题或意见和想法，欢迎留言讨论。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要是玩玩CNPM私有库，理解里面的原理，有助于部署到服务器上和使用私用库来管理代码。&lt;/p&gt;
&lt;h2 id=&quot;一、环境准备：&quot;&gt;&lt;a href=&quot;#一、环境准备：&quot; class=&quot;headerlink&quot; title=&quot;一、环境准备：&quot;&gt;&lt;/a&gt;一、环境准备：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows操作系统；&lt;/li&gt;
&lt;li&gt;MySQL数据库（支持’mysql’, ‘sqlite’, ‘postgres’, ‘mariadb’。这里选择MySQL）&lt;/li&gt;
&lt;li&gt;CNMP私有库源码（&lt;a href=&quot;https://github.com/cnpm/cnpmjs.org%EF%BC%89&quot;&gt;https://github.com/cnpm/cnpmjs.org）&lt;/a&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="工程化" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="CNPM" scheme="http://example.com/tags/CNPM/"/>
    
  </entry>
  
  <entry>
    <title>基于webpack模块加载，ts里对系统对象prototype的扩展</title>
    <link href="http://example.com/archives/a9bf.html"/>
    <id>http://example.com/archives/a9bf.html</id>
    <published>2017-04-05T03:32:06.000Z</published>
    <updated>2021-04-15T13:40:22.218Z</updated>
    
    <content type="html"><![CDATA[<p>用systemJS的时候，这样写是可以：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 对Date的扩展，将 Date 转化为指定格式的String</span></span><br><span class="line">    <span class="comment">// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，</span></span><br><span class="line">    <span class="comment">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)</span></span><br><span class="line">    <span class="comment">// 例子：</span></span><br><span class="line">    <span class="comment">// (new Date()).format(&quot;yyyy-MM-dd hh:mm:ss.S&quot;) ==&gt; 2006-07-02 08:09:04.423</span></span><br><span class="line">    <span class="comment">// (new Date()).format(&quot;yyyy-M-d h:m:s.S&quot;)      ==&gt; 2006-7-2 8:9:4.18</span></span><br><span class="line">    <span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>&#123;</span><br><span class="line">        ……</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>但是换成webpack后，这样就报错了，识别不了，查了一些资料，换成下面的就可以了。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">　　　　　<span class="comment">// 对Date的扩展，将 Date 转化为指定格式的String</span></span><br><span class="line">    <span class="comment">// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，</span></span><br><span class="line">    <span class="comment">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)</span></span><br><span class="line">    <span class="comment">// 例子：</span></span><br><span class="line">    <span class="comment">// (new Date()).format(&quot;yyyy-MM-dd hh:mm:ss.S&quot;) ==&gt; 2006-07-02 08:09:04.423</span></span><br><span class="line">    <span class="comment">// (new Date()).format(&quot;yyyy-M-d h:m:s.S&quot;)      ==&gt; 2006-7-2 8:9:4.18</span></span><br><span class="line">    <span class="built_in">Date</span>.prototype[<span class="string">&#x27;format&#x27;</span>] = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>&#123; </span><br><span class="line">        ……</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者用这种方法<a href="http://stackoverflow.com/questions/12766117/how-does-prototype-extend-on-typescript">http://stackoverflow.com/questions/12766117/how-does-prototype-extend-on-typescript</a></p><p>觉得这种方法不是很好，也没亲测</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;用systemJS的时候，这样写是可以：&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 对Date的扩展，将 Date 转化为指定格式的String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 例子：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// (new Date()).format(&amp;quot;yyyy-MM-dd hh:mm:ss.S&amp;quot;) ==&amp;gt; 2006-07-02 08:09:04.423&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// (new Date()).format(&amp;quot;yyyy-M-d h:m:s.S&amp;quot;)      ==&amp;gt; 2006-7-2 8:9:4.18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.prototype.format = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;fmt&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ……&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="工程化" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
    <category term="webpack" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/webpack/"/>
    
    
    <category term="webpack" scheme="http://example.com/tags/webpack/"/>
    
    <category term="typescript" scheme="http://example.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>primeNG的p-dropdown的选中值未初始化</title>
    <link href="http://example.com/archives/4775.html"/>
    <id>http://example.com/archives/4775.html</id>
    <published>2017-03-31T01:45:55.000Z</published>
    <updated>2021-04-15T14:38:43.223Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p-dropdown</span> <span class="attr">name</span>=<span class="string">&quot;adjustflagId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dp-position&quot;</span> [<span class="attr">options</span>]=<span class="string">&quot;codeTable.adjustAccountFlag&quot;</span></span></span><br><span class="line"><span class="tag">    [(<span class="attr">ngModel</span>)]=<span class="string">&quot;editObj.adjustflagId&quot;</span> [<span class="attr">style</span>]=<span class="string">&quot;&#123;&#x27;width&#x27;: &#x27;124px&#x27;&#125;&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">p-dropdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p-dropdown</span> <span class="attr">name</span>=<span class="string">&quot;adjustflagId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dp-position&quot;</span> [<span class="attr">options</span>]=<span class="string">&quot;codeTable.nameArr&quot;</span></span></span><br><span class="line"><span class="tag">    [(<span class="attr">ngModel</span>)]=<span class="string">&quot;editObj.name&quot;</span> [<span class="attr">style</span>]=<span class="string">&quot;&#123;&#x27;width&#x27;: &#x27;124px&#x27;&#125;&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">p-dropdown</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码复制的，name属性相同所致。</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p-dropdown&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;adjustflagId&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;dp-position&amp;quot;&lt;/span&gt; [&lt;span class=&quot;attr&quot;&gt;options&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&amp;quot;codeTable.adjustAccountFlag&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;    [(&lt;span class=&quot;attr&quot;&gt;ngModel&lt;/span&gt;)]=&lt;span class=&quot;string&quot;&gt;&amp;quot;editObj.adjustflagId&amp;quot;&lt;/span&gt; [&lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#123;&amp;#x27;width&amp;#x27;: &amp;#x27;124px&amp;#x27;&amp;#125;&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;required&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p-dropdown&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p-dropdown&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;adjustflagId&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;dp-position&amp;quot;&lt;/span&gt; [&lt;span class=&quot;attr&quot;&gt;options&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&amp;quot;codeTable.nameArr&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;    [(&lt;span class=&quot;attr&quot;&gt;ngModel&lt;/span&gt;)]=&lt;span class=&quot;string&quot;&gt;&amp;quot;editObj.name&amp;quot;&lt;/span&gt; [&lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#123;&amp;#x27;width&amp;#x27;: &amp;#x27;124px&amp;#x27;&amp;#125;&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;required&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p-dropdown&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码复制的，name属性相同所致。&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Angular" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/Angular/"/>
    
    <category term="primeNG" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/Angular/primeNG/"/>
    
    
    <category term="angular" scheme="http://example.com/tags/angular/"/>
    
    <category term="primeNG" scheme="http://example.com/tags/primeNG/"/>
    
  </entry>
  
</feed>
